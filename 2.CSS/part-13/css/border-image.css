@charset "UTF-8";

html {
  font-size: 10px;
}

body {
  margin: 2rem auto;
  width: 90%;
  min-width: 480px;
  max-width: 1100px;
  min-height: 100vh;
  font: 1.4rem/1.5 "Open Sans", Verdana, Sans-Serif;
  color: #505050;
}

* {
  box-sizing: border-box;
}

.toggle-caniuse {
  cursor: pointer;
  width: 100%;
  margin-bottom: 40px;
  border: 1px solid currentcolor;
  border-radius: 4px;
  padding: 7px 10px;
  background: none;
  font-size: 14px;
  color: #505050;
  transition: all 0.2s;
}

.toggle-caniuse:hover,
.toggle-caniuse:focus {
  border-color: currentcolor;
  color: #009cc1;
}

.toggle-caniuse:focus {
  outline: none;
}

[hidden] {
  display: none !important;
}

figure {
  margin: 0 0 3rem;
}

figcaption {
  user-select: none;
  cursor: pointer;
  margin-top: 10px;
  margin-bottom: 10px;
  border-bottom: 1px dashed #c0c0c0;
  padding-bottom: 10px;
}

img {
  width: 50vw;
  vertical-align: middle;
}

img.is-rwd {
  width: 100%;
  height: auto;
}

/* -------------------------------------------------------- 
 * border-image 실습
 */

/*
  
  [문법]

    border-image: source [slice / width / outset repeat] 

    border-image-source
    border-image-slice
    border-image-width
    border-image-outset
    border-image-repeat


  [source] : url() 함수를 사용하여 이미지 경로를 설정합니다.


  [slice / width / outset]

  - slice
    슬라이스는 이미지의 상(⬆︎), 우(➡︎), 하(⬇︎), 좌(⬅︎) 가장자리 오프셋을 설정합니다. (최대 4개)
    보더 이미지를 9개 영역으로 나눌(slice) 수 있습니다. (px 단위 사용 X)

  - width
    요소의 상/우/하/좌 테두리 이미지 너비(width)를 설정합니다. (최대 4개)
    실제 테두리의 너비는 영향을 받지 않고 이미지는 맨 위에 배치됩니다. 
    border-image 너비가 border-width 보다 클 경우 채우기 영역 또는 
    내용 영역을 포함합니다. 단위 없는 값은 요소의 테두리 너비의 배수로 해석됩니다. 
    테두리 이미지 너비는 기본적으로 테두리 너비와 같습니다.

  - outset (테두리와 콘텐츠 사이 안쪽 여백 크기 조정)
    테두리 이미지를 주어진 값만큼 패딩(안쪽) 영역을 설정합니다. (최대 4개)
    단위 없는 값을 사용할 경우, 요소의 테두리 너비(width)에 곱하여 오프셋합니다.


  [repeat 설정]
  - stretch (기본 값)
  - repeat 
  - round 
  - space


  [예시]

  // 슬라이스 10px 설정, 가장자리 섹션 stretch 사용
  border-image: url('imageUrl') 10;

  // 각 테두리 방향에서 5% 조각 이미지 사용, 가장자리 반복 설정
  border-image: url('imageUrl') 5% round;

  // 슬라이스 오프셋 ⇒ 순서: 위 오른쪽 아래 왼쪽
  border-image: url('imageUrl') 10 20 30 40;

  // 테두리를 2배 큰 border-width 값으로 크기 조정
  border-image: url('imageUrl') 10 / 2 repeat;

  // 테두리를 2배 큰 border-width 값으로 크기 조정하고 
  // 여백 테두리는 1배 border-width 값으로 설정
  border-image: url('imageUrl') 5 / 2 / 1;

  // 4개의 가장자리마다 각기 다른 설정
  border-image: url('imageUrl') 5 8 6 10 / 1 2 1 3 / 0 1 .5 .5;

*/

.border-demo {
  width: 50vw;
  min-width: 320px;
  box-sizing: border-box;
  border: 10px solid #d33c7c;
  padding-left: 10px;
  padding-right: 10px;
}

.border-demo p {
  margin: 10px 0;
}


.is-airmail {
  border-image: url("http://svgshare.com/i/6Fu.svg") 10 round;
}


.is-wood {
  width: 50vw;
  border: 20px solid #dca56b;
  border-image: url("http://image.ibb.co/dgydgn/wood_frame.png") 50 64;
}


.is-oriental {
  border: 30px solid #333;
  border-image: url("http://image.ibb.co/nvJENS/pattern.png") 73 74 round;
}

.is-oriental p {
  margin: 0;
}


.is-gradient {
  width: 50vw;
  border: 20px solid #f98b14;
	border-image: linear-gradient(-45deg, #00b9e9, #f98b14, #503370) 20;
}


.is-zigzag {
  border: 10px solid #ddd;
  border-image: url("http://image.ibb.co/dGz4nS/zigzag.png") 10 round;
  color: #2dc6d2;
}


.is-zigzag-stretch {
  border: 10px solid #ddd;
  border-image: url("http://image.ibb.co/dGz4nS/zigzag.png") 10;
  color: #2dc6d2;
}


.compare {
  margin: 20px 0;
  border-image-source: url('http://svgshare.com/i/6Dy.svg');
  border-image-slice: 33.3333%;
  text-align: center;
}

.border-demo.is-stretch {
  border-image-repeat: stretch;
}
.border-demo.is-repeat {
  border-image-repeat: repeat;
}
.border-demo.is-round {
  border-image-repeat: round;
}
.border-demo.is-space {
  border-image-repeat: space;
}